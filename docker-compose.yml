version: '3.8'

services:
  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    ports:
      - "8080:8080"
    environment:
      - SPRING_PROFILES_ACTIVE=dev
      - AZURE_SPEECH_KEY=${AZURE_SPEECH_KEY:-your_speech_key}
      - AZURE_SPEECH_REGION=${AZURE_SPEECH_REGION:-eastus}
      - AZURE_OPENAI_KEY=${AZURE_OPENAI_KEY:-your_openai_key}
      - AZURE_OPENAI_ENDPOINT=${AZURE_OPENAI_ENDPOINT:-https://your-resource.openai.azure.com/}
      - AZURE_OPENAI_DEPLOYMENT=${AZURE_OPENAI_DEPLOYMENT:-gpt-4}
      - APP_API_KEY=${APP_API_KEY:-dev-api-key-12345}
    volumes:
      - ./backend/logs:/app/logs
    healthcheck:
      test: ["CMD", "wget", "--quiet", "--tries=1", "--spider", "http://localhost:8080/api/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s
    networks:
      - interview-assistant

  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    ports:
      - "3000:3000"
    environment:
      - NEXT_PUBLIC_WS_URL=ws://localhost:8080/ws/stream
      - NEXT_PUBLIC_API_KEY=${APP_API_KEY:-dev-api-key-12345}
    depends_on:
      backend:
        condition: service_healthy
    networks:
      - interview-assistant

  # Optional: Add a reverse proxy for production
  nginx:
    image: nginx:alpine
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf:ro
      - ./ssl:/etc/nginx/ssl:ro
    depends_on:
      - frontend
      - backend
    networks:
      - interview-assistant
    profiles:
      - production

networks:
  interview-assistant:
    driver: bridge

volumes:
  backend-logs:
    driver: local